apiVersion: kudo.k8s.io/v1alpha1
kind: FrameworkVersion
metadata:
  name: elastic-0.1.0
  namespace: default
  labels:
    controller-tools.k8s.io: "1.0"
spec:
  version: "0.1.0"
  connectionString: ""
  framework:
    name: elastic
    kind: Framework
  parameters:
    - name: DATA_NODE_COUNT
      default: "2"
    - name: COORDINATOR_NODE_COUNT
      default: "1"
    - name: INGEST_NODE_COUNT
      default: "0"
    - name: MASTER_CPU
      default: "0.25"
    - name: MASTER_MEM
      default: "1Gi"
    - name: MASTER_DISK
      default: "2Gi"
    - name: DATA_CPU
      default: "0.25"
    - name: DATA_MEM
      default: "2Gi"
    - name: DATA_DISK
      default: "4Gi"
    - name: COORDINATOR_CPU
      default: "0.1"
    - name: COORDINATOR_MEM
      default: "1Gi"
    - name: COORDINATOR_DISK
      default: "2Gi"
    - name: INGEST_CPU
      default: "0.1"
    - name: INGEST_MEM
      default: "1Gi"
    - name: INGEST_DISK
      default: "2Gi"
  templates:
    master-service.yaml: |
      kind: Service
      apiVersion: v1
      metadata:
        name: master-hs
        namespace: {{ .Namespace }}
      spec:
        selector:
          app: master
        ports:
          - protocol: TCP
            port: 9200
        clusterIP: None
    master.yaml: |
      kind: StatefulSet
      apiVersion: apps/v1
      metadata:
        name: master
        namespace: {{ .Namespace }}
      spec:
        selector:
          matchLabels:
            app: master # has to match .spec.template.metadata.labels
        serviceName: {{ .Name }}-master-hs
        replicas: 3
        template:
          metadata:
            labels:
              app: master # has to match .spec.selector.matchLabels
          spec:
            initContainers:
              - name: init-sysctl
                image: busybox
                command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
                securityContext:
                  privileged: true
              - name: volume-permissions
                image: busybox
                command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
            terminationGracePeriodSeconds: 10
            containers:
              - name: elastic
                image: elasticsearch:7.0.0
                resources:
                  requests:
                    cpu: {{ .Params.MASTER_CPU }}
                    memory: {{ .Params.MASTER_MEM }}
                ports:
                  - containerPort: 9200
                    name: api
                  - containerPort: 9300
                    name: internal
                env:
                  - name: cluster.name
                    value: {{ .Name }}-cluster
                  - name: discovery.seed_hosts
                    value: {{ .Name }}-master-0.{{ .Name }}-master-hs,{{ .Name }}-master-1.{{ .Name }}-master-hs,{{ .Name }}-master-2.{{ .Name }}-master-hs
                  - name: cluster.initial_master_nodes
                    value: {{ .Name }}-master-0,{{ .Name }}-master-1,{{ .Name }}-master-2
                  - name: node.master
                    value: "true"
                  - name: node.data
                    value: "false"
                  - name: node.ingest
                    value: "false"
                  - name: cluster.remote.connect
                    value: "false"
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
        volumeClaimTemplates:
          - metadata:
              name: data
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: {{ .Params.MASTER_DISK }}
    data-service.yaml: |
      kind: Service
      apiVersion: v1
      metadata:
        name: data-hs
        namespace: {{ .Namespace }}
      spec:
        selector:
          app: data
        ports:
          - protocol: TCP
            port: 9200
        clusterIP: None
    data.yaml: |
      kind: StatefulSet
      apiVersion: apps/v1
      metadata:
        name: data
        namespace: {{ .Namespace }}
      spec:
        selector:
          matchLabels:
            app: data # has to match .spec.template.metadata.labels
        serviceName: {{ .Name }}-data-hs
        replicas: {{ .Params.DATA_NODE_COUNT }}
        template:
          metadata:
            labels:
              app: data # has to match .spec.selector.matchLabels
          spec:
            initContainers:
              - name: init-sysctl
                image: busybox
                command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
                securityContext:
                  privileged: true
              - name: volume-permissions
                image: busybox
                command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
            terminationGracePeriodSeconds: 10
            containers:
              - name: elastic
                image: elasticsearch:7.0.0
                resources:
                  requests:
                    cpu: {{ .Params.DATA_CPU }}
                    memory: {{ .Params.DATA_MEM }}
                ports:
                  - containerPort: 9200
                    name: api
                  - containerPort: 9300
                    name: internal
                env:
                  - name: cluster.name
                    value: {{ .Name }}-cluster
                  - name: discovery.seed_hosts
                    value: {{ .Name }}-master-0.{{ .Name }}-master-hs,{{ .Name }}-master-1.{{ .Name }}-master-hs,{{ .Name }}-master-2.{{ .Name }}-master-hs
                  - name: node.master
                    value: "false"
                  - name: node.data
                    value: "true"
                  - name: node.ingest
                    value: "false"
                  - name: cluster.remote.connect
                    value: "false"
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
        volumeClaimTemplates:
          - metadata:
              name: data
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: {{ .Params.DATA_DISK }}
    coordinator-service.yaml: |
      kind: Service
      apiVersion: v1
      metadata:
        name: coordinator-hs
        namespace: {{ .Namespace }}
      spec:
        selector:
          app: coordinator
        ports:
          - protocol: TCP
            port: 9200
        clusterIP: None
    coordinator.yaml: |
      kind: StatefulSet
      apiVersion: apps/v1
      metadata:
        name: coordinator
        namespace: {{ .Namespace }}
      spec:
        selector:
          matchLabels:
            app: coordinator # has to match .spec.template.metadata.labels
        serviceName: {{ .Name }}-coordinator-hs
        replicas: {{ .Params.COORDINATOR_NODE_COUNT }}
        template:
          metadata:
            labels:
              app: coordinator # has to match .spec.selector.matchLabels
          spec:
            initContainers:
              - name: init-sysctl
                image: busybox
                command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
                securityContext:
                  privileged: true
              - name: volume-permissions
                image: busybox
                command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
            terminationGracePeriodSeconds: 10
            containers:
              - name: elastic
                image: elasticsearch:7.0.0
                resources:
                  requests:
                    cpu: {{ .Params.COORDINATOR_CPU }}
                    memory: {{ .Params.COORDINATOR_MEM }}
                ports:
                  - containerPort: 9200
                    name: api
                  - containerPort: 9300
                    name: internal
                env:
                  - name: cluster.name
                    value: {{ .Name }}-cluster
                  - name: discovery.seed_hosts
                    value: {{ .Name }}-master-0.{{ .Name }}-master-hs,{{ .Name }}-master-1.{{ .Name }}-master-hs,{{ .Name }}-master-2.{{ .Name }}-master-hs
                  - name: node.master
                    value: "false"
                  - name: node.data
                    value: "false"
                  - name: node.ingest
                    value: "false"
                  - name: cluster.remote.connect
                    value: "false"
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
        volumeClaimTemplates:
          - metadata:
              name: data
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: {{ .Params.COORDINATOR_DISK }}
    ingest-service.yaml: |
      kind: Service
      apiVersion: v1
      metadata:
        name: ingest-hs
        namespace: {{ .Namespace }}
      spec:
        selector:
          app: ingest
        ports:
          - protocol: TCP
            port: 9200
        clusterIP: None
    ingest.yaml: |
      kind: StatefulSet
      apiVersion: apps/v1
      metadata:
        name: ingest
        namespace: {{ .Namespace }}
      spec:
        selector:
          matchLabels:
            app: ingest # has to match .spec.template.metadata.labels
        serviceName: {{ .Name }}-ingest-hs
        replicas: {{ .Params.INGEST_NODE_COUNT }}
        template:
          metadata:
            labels:
              app: ingest # has to match .spec.selector.matchLabels
          spec:
            initContainers:
              - name: init-sysctl
                image: busybox
                command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
                securityContext:
                  privileged: true
              - name: volume-permissions
                image: busybox
                command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
            terminationGracePeriodSeconds: 10
            containers:
              - name: elastic
                image: elasticsearch:7.0.0
                resources:
                  requests:
                    cpu: {{ .Params.INGEST_CPU }}
                    memory: {{ .Params.INGEST_MEM }}
                ports:
                  - containerPort: 9200
                    name: api
                  - containerPort: 9300
                    name: internal
                env:
                  - name: cluster.name
                    value: {{ .Name }}-cluster
                  - name: discovery.seed_hosts
                    value: {{ .Name }}-master-0.{{ .Name }}-master-hs,{{ .Name }}-master-1.{{ .Name }}-master-hs,{{ .Name }}-master-2.{{ .Name }}-master-hs
                  - name: node.master
                    value: "false"
                  - name: node.data
                    value: "false"
                  - name: node.ingest
                    value: "true"
                  - name: cluster.remote.connect
                    value: "false"
                volumeMounts:
                  - name: data
                    mountPath: /usr/share/elasticsearch/data
        volumeClaimTemplates:
          - metadata:
              name: data
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: {{ .Params.INGEST_DISK }}
  tasks:
    deploy-master:
      resources:
        - master-service.yaml
        - master.yaml
    deploy-data:
      resources:
        - data-service.yaml
        - data.yaml
    deploy-coordinator:
      resources:
        - coordinator-service.yaml
        - coordinator.yaml
    deploy-ingest:
      resources:
        - ingest-service.yaml
        - ingest.yaml
  plans:
    deploy:
      strategy: serial
      phases:
        - name: deploy-master
          strategy: parallel
          steps:
            - name: deploy-master
              tasks:
                - deploy-master
        - name: deploy-data
          strategy: parallel
          steps:
            - name: deploy-data
              tasks:
                - deploy-data
        - name: deploy-coordinator
          strategy: parallel
          steps:
            - name: deploy-coordinator
              tasks:
                - deploy-coordinator
        - name: deploy-ingest
          strategy: parallel
          steps:
            - name: deploy-ingest
              tasks:
                - deploy-ingest