apiVersion: kudo.k8s.io/v1alpha1
kind: FrameworkVersion
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: flink-1.7
  namespace: default
spec:
  framework:
    name: flink # this needs to link to an existing framework defined in the *-framework.yaml
    kind: Framework
  # Add fields here
  version: "1.7" # this will be the version label
  parameters:
    - name: FLINK_TASKMANAGER_REPLICAS
      description: Number of task managers to run
      default: "2"
    - name: FLINK_JOBMANAGER_REPLICAS
      description: Number of job managers to run
      default: "1"
    - name: ZOOKEEPER_URL
      description: Connection information for Zookeeper
      default: "zk-zk-0.zk-hs:2181,zk-zk-1.zk-hs:2181,zk-zk-2.zk-hs:2181"
    - name: ZOOKEEPER_PATH
      description: path to store Flink data in Zookeeper
      defaut: "/flink"
    - name: HIGH_AVAILABILITY
      description: Defines high-availability mode used for the cluster execution. To enable high-availability, set this mode to "ZOOKEEPER" or specify FQN of factory class.
      default: NONE
  templates:
    storage.yaml: |
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: snapshots
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
      ---
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: ha
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
    # HA PVs
    configmap.yaml: |
      apiVersion: v1
      data:
        log4j-console.properties: |
          ################################################################################
          #  Licensed to the Apache Software Foundation (ASF) under one
          #  or more contributor license agreements.  See the NOTICE file
          #  distributed with this work for additional information
          #  regarding copyright ownership.  The ASF licenses this file
          #  to you under the Apache License, Version 2.0 (the
          #  "License"); you may not use this file except in compliance
          #  with the License.  You may obtain a copy of the License at
          #
          #      http://www.apache.org/licenses/LICENSE-2.0
          #
          #  Unless required by applicable law or agreed to in writing, software
          #  distributed under the License is distributed on an "AS IS" BASIS,
          #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
          #  See the License for the specific language governing permissions and
          # limitations under the License.
          ################################################################################

          # This affects logging for both user code and Flink
          log4j.rootLogger=INFO, console

          # Uncomment this if you want to _only_ change Flink's logging
          #log4j.logger.org.apache.flink=INFO

          # The following lines keep the log level of common libraries/connectors on
          # log level INFO. The root logger does not override this. You have to manually
          # change the log levels here.
          log4j.logger.akka=INFO
          log4j.logger.org.apache.kafka=INFO
          log4j.logger.org.apache.hadoop=INFO
          log4j.logger.org.apache.zookeeper=INFO

          # Log all infos in the given file
          log4j.appender.console=org.apache.log4j.ConsoleAppender
          log4j.appender.console.target=System.out
          log4j.appender.console.immediateFlush=true
          log4j.appender.console.encoding=UTF-8
          log4j.appender.console.layout=org.apache.log4j.PatternLayout
          log4j.appender.console.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n

          # Suppress the irrelevant (wrong) warnings from the Netty channel handler
          log4j.logger.org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline=ERROR, file
        flink-conf.yaml: |
          #==============================================================================
          # High Availability
          #==============================================================================

          # The high-availability mode. Possible options are 'NONE' or 'zookeeper'.
          #
          high-availability: zookeeper

          # The path where metadata for master recovery is persisted. While ZooKeeper stores
          # the small ground truth for checkpoint and leader election, this location stores
          # the larger objects, like persisted dataflow graphs.
          # 
          # Must be a durable file system that is accessible from all nodes
          # (like HDFS, S3, Ceph, nfs, ...) 
          #
          high-availability.storageDir: file:///ha/

          state.savepoints.dir: file:///snapshots/
          state.checkpoints.dir: file:///snapshots/

          # The list of ZooKeeper quorum peers that coordinate the high-availability
          # setup. This must be a list of the form:
          # "host1:clientPort,host2:clientPort,..." (default clientPort: 2181)
          #
          high-availability.zookeeper.quorum: {{ZOOKEEPER_URL}}
          high-availability.zookeeper.path.root: {{ZOOKEEPER_PATH}}
      kind: ConfigMap
      metadata:
        name: config
    services.yaml: |
      apiVersion: v1
      kind: Service
      metadata:
        name: jobmanager
        namespace: {{NAMESPACE}}
      spec:
        ports:
        - name: rpc
          port: 6123
        - name: blob
          port: 6124
        - name: query
          port: 6125
        - name: ui
          port: 8081
        selector:
          app: {{NAME}}
          component: {{NAME}}-jobmanager
    taskmanager-deployment.yaml: |
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: taskmanager
      spec:
        replicas: {{FLINK_TASKMANAGER_REPLICAS}}
        template:
          metadata:
            labels:
              app: flink
              component: {{NAME}}-taskmanager
          spec:
            containers:
            - name: taskmanager
              image: flink:1.7
              args:
              - taskmanager
              ports:
              - containerPort: 6121
                name: data
              - containerPort: 6122
                name: rpc
              - containerPort: 6125
                name: query
              env:
              - name: JOB_MANAGER_RPC_ADDRESS
                value: {{NAME}}-jobmanager
              volumeMounts:
              - name: ha
                mountPath: /ha
              - name: snapshots
                mountPath: /snapshots
              - name: config
                mountPath: /opt/flink/conf
            volumes:
            - name: ha
              persistentVolumeClaim:
                claimName: {{NAME}}-ha
            - name: snapshots
              persistentVolumeClaim:
                claimName: {{NAME}}-snapshots
            - name: config
              configMap:
                name: {{NAME}}-config
    jobmanager-deployment.yaml: |
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: jobmanager
      spec:
        replicas: {{FLINK_JOBMANAGER_REPLICAS}}
        template:
          metadata:
            labels:
              app: {{NAME}}
              component: {{NAME}}-jobmanager
          spec:
            containers:
            - name: jobmanager
              image: flink:1.7
              args:
              - jobmanager
              ports:
              - containerPort: 6123
                name: rpc
              - containerPort: 6124
                name: blob
              - containerPort: 6125
                name: query
              - containerPort: 8081
                name: ui
              env:
              - name: JOB_MANAGER_RPC_ADDRESS
                value: {{NAME}}-jobmanager
              volumeMounts:
              - name: ha
                mountPath: /ha
              - name: snapshots
                mountPath: /snapshots
              - name: config
                mountPath: /opt/flink/conf
            volumes:
            - name: ha
              persistentVolumeClaim:
                claimName: {{NAME}}-ha
            - name: snapshots
              persistentVolumeClaim:
                claimName: {{NAME}}-snapshots
            - name: config
              configMap:
                name: {{NAME}}-config
  tasks:
    common:
      resources:
        - configmap.yaml
        - storage.yaml
    jobmanager:
      resources:
        - jobmanager-deployment.yaml
    jobmanager-service:
      resources:
        - services.yaml
    taskmanager:
      resources:
        - taskmanager-deployment.yaml
  plans:
    deploy:
      strategy: serial
      phases:
        - name: flink
          strategy: serial
          steps:
            - name: jobmanager
              tasks:
                - common
                - jobmanager
                - jobmanager-service
                - taskmanager